name: SpaceONE CI tag push
on:
  push:
    tags:
      - "**"
  workflow_dispatch:
    inputs:
      tag:
        # can replace github.event.inputs.tag <=> steps.getTag.outputs.tag
        default: 1.2.3

env:
  IMAGE_PREFIX: pyengine
  # LOCATION points the parent directory
  LOCATION_SETUP_PY: src # optional. for pypi upload
  LOCATION_VERSION: src # the location for VERSION file (ex- . means the location of VERSION is ./VERSION)
  SERVICE: spacectl
  LOCATION_DOCKERFILE: .

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.set_ver.outputs.VERSION }}
      LATEST_TAG: ${{ steps.set_latestTag.outputs.LATEST_TAG }}
    steps:
      - uses: actions/checkout@v2
      - uses: olegtarasov/get-tag@v2
        id: getTag

      - name: Set version
        id: set_ver
        run: |
          if [ ${{ steps.getTag.outputs.tag }} ]
          then
            echo "::set-output name=VERSION::${{ steps.getTag.outputs.tag }}"
            echo "VERSION=${{ steps.getTag.outputs.tag }}" >> $GITHUB_ENV
          else
            echo "::set-output name=VERSION::${{ github.event.inputs.tag }}"
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi

      - id: set_latestTag
        run: |
          # LATEST_TAG true or false
          if [[ $VERSION =~ ^[0-9]\.[0-9]\.[0-9]$ ]];
          then
            echo "::set-output name=LATEST_TAG::true"
          else
            echo "::set-output name=LATEST_TAG::false"
          fi

  pypi:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    env:
      VERSION: ${{ needs.initialize.outputs.VERSION }}
    runs-on: ubuntu-latest      
    steps:
      - uses: actions/checkout@v2
      - name: set version
        run: echo $VERSION > $LOCATION_VERSION/VERSION
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install setuptools wheel twine
      - name: Build
        run: |
          cd $LOCATION_SETUP_PY
          python setup.py sdist bdist_wheel
      - name: Upload Pypi
        id: upload
        run: |
          cd $LOCATION_SETUP_PY
          twine upload dist/*.whl --username ${{ secrets.PYPI_USERNAME }} --password ${{ secrets.PYPI_PASSWORD }} --verbose
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

  docker:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    env:
      LATEST_TAG: ${{ needs.initialize.outputs.LATEST_TAG }}
      VERSION: ${{ needs.initialize.outputs.VERSION }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: set version
        run: echo $VERSION > $LOCATION_VERSION/VERSION
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        if: env.LATEST_TAG == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}:latest
            ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}:${{ env.VERSION }}
      - 
        name: Build and push
        if: env.LATEST_TAG == 'false'
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}:${{ env.VERSION }}

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  branch:
    if: github.repository_owner == 'spaceone-dev'
    needs: initialize
    env:
      LATEST_TAG: ${{ needs.initialize.outputs.LATEST_TAG }}
      VERSION: ${{ needs.initialize.outputs.VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: make branch
        if: env.LATEST_TAG == 'true'
        uses: peterjgrainger/action-create-branch@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ env.VERSION }}